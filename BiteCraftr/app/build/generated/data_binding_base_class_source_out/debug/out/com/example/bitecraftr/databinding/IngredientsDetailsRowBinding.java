// Generated by view binder compiler. Do not edit!
package com.example.bitecraftr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bitecraftr.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IngredientsDetailsRowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout ingredientRow;

  @NonNull
  public final ImageView ingredientsImg;

  @NonNull
  public final TextView ingredientsMeasure;

  @NonNull
  public final TextView ingredientsTitle;

  private IngredientsDetailsRowBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout ingredientRow, @NonNull ImageView ingredientsImg,
      @NonNull TextView ingredientsMeasure, @NonNull TextView ingredientsTitle) {
    this.rootView = rootView;
    this.ingredientRow = ingredientRow;
    this.ingredientsImg = ingredientsImg;
    this.ingredientsMeasure = ingredientsMeasure;
    this.ingredientsTitle = ingredientsTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static IngredientsDetailsRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IngredientsDetailsRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ingredients_details_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IngredientsDetailsRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout ingredientRow = (ConstraintLayout) rootView;

      id = R.id.ingredientsImg;
      ImageView ingredientsImg = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsImg == null) {
        break missingId;
      }

      id = R.id.ingredientsMeasure;
      TextView ingredientsMeasure = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsMeasure == null) {
        break missingId;
      }

      id = R.id.ingredientsTitle;
      TextView ingredientsTitle = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsTitle == null) {
        break missingId;
      }

      return new IngredientsDetailsRowBinding((ConstraintLayout) rootView, ingredientRow,
          ingredientsImg, ingredientsMeasure, ingredientsTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
