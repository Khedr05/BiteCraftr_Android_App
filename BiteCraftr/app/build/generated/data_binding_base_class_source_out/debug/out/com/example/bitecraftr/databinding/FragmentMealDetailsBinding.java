// Generated by view binder compiler. Do not edit!
package com.example.bitecraftr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bitecraftr.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMealDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView addToFavBtn;

  @NonNull
  public final ImageView addToScheduleBtn;

  @NonNull
  public final TextView areaLabel;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final TextView descLabel;

  @NonNull
  public final TextView descriptionTxtView;

  @NonNull
  public final TextView ingLabel;

  @NonNull
  public final RecyclerView ingredientsRecView;

  @NonNull
  public final TextView mealArea;

  @NonNull
  public final ImageView mealAreaFlag;

  @NonNull
  public final ImageView mealImage;

  @NonNull
  public final TextView mealTitle;

  @NonNull
  public final WebView mealVideo;

  @NonNull
  public final TextView videoLabel;

  private FragmentMealDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView addToFavBtn, @NonNull ImageView addToScheduleBtn,
      @NonNull TextView areaLabel, @NonNull ImageView backBtn, @NonNull TextView descLabel,
      @NonNull TextView descriptionTxtView, @NonNull TextView ingLabel,
      @NonNull RecyclerView ingredientsRecView, @NonNull TextView mealArea,
      @NonNull ImageView mealAreaFlag, @NonNull ImageView mealImage, @NonNull TextView mealTitle,
      @NonNull WebView mealVideo, @NonNull TextView videoLabel) {
    this.rootView = rootView;
    this.addToFavBtn = addToFavBtn;
    this.addToScheduleBtn = addToScheduleBtn;
    this.areaLabel = areaLabel;
    this.backBtn = backBtn;
    this.descLabel = descLabel;
    this.descriptionTxtView = descriptionTxtView;
    this.ingLabel = ingLabel;
    this.ingredientsRecView = ingredientsRecView;
    this.mealArea = mealArea;
    this.mealAreaFlag = mealAreaFlag;
    this.mealImage = mealImage;
    this.mealTitle = mealTitle;
    this.mealVideo = mealVideo;
    this.videoLabel = videoLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMealDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMealDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_meal_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMealDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addToFavBtn;
      ImageView addToFavBtn = ViewBindings.findChildViewById(rootView, id);
      if (addToFavBtn == null) {
        break missingId;
      }

      id = R.id.addToScheduleBtn;
      ImageView addToScheduleBtn = ViewBindings.findChildViewById(rootView, id);
      if (addToScheduleBtn == null) {
        break missingId;
      }

      id = R.id.areaLabel;
      TextView areaLabel = ViewBindings.findChildViewById(rootView, id);
      if (areaLabel == null) {
        break missingId;
      }

      id = R.id.backBtn;
      ImageView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.descLabel;
      TextView descLabel = ViewBindings.findChildViewById(rootView, id);
      if (descLabel == null) {
        break missingId;
      }

      id = R.id.descriptionTxtView;
      TextView descriptionTxtView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTxtView == null) {
        break missingId;
      }

      id = R.id.ingLabel;
      TextView ingLabel = ViewBindings.findChildViewById(rootView, id);
      if (ingLabel == null) {
        break missingId;
      }

      id = R.id.ingredientsRecView;
      RecyclerView ingredientsRecView = ViewBindings.findChildViewById(rootView, id);
      if (ingredientsRecView == null) {
        break missingId;
      }

      id = R.id.mealArea;
      TextView mealArea = ViewBindings.findChildViewById(rootView, id);
      if (mealArea == null) {
        break missingId;
      }

      id = R.id.mealAreaFlag;
      ImageView mealAreaFlag = ViewBindings.findChildViewById(rootView, id);
      if (mealAreaFlag == null) {
        break missingId;
      }

      id = R.id.mealImage;
      ImageView mealImage = ViewBindings.findChildViewById(rootView, id);
      if (mealImage == null) {
        break missingId;
      }

      id = R.id.mealTitle;
      TextView mealTitle = ViewBindings.findChildViewById(rootView, id);
      if (mealTitle == null) {
        break missingId;
      }

      id = R.id.mealVideo;
      WebView mealVideo = ViewBindings.findChildViewById(rootView, id);
      if (mealVideo == null) {
        break missingId;
      }

      id = R.id.videoLabel;
      TextView videoLabel = ViewBindings.findChildViewById(rootView, id);
      if (videoLabel == null) {
        break missingId;
      }

      return new FragmentMealDetailsBinding((ConstraintLayout) rootView, addToFavBtn,
          addToScheduleBtn, areaLabel, backBtn, descLabel, descriptionTxtView, ingLabel,
          ingredientsRecView, mealArea, mealAreaFlag, mealImage, mealTitle, mealVideo, videoLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
